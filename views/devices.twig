{% extends 'layout.twig' %}

{% block body %}
	<h2>Devices</h2>
	<div class="devicesGroupContainer" id="devicesGroupContainer">
		{% for deviceData in devices %}
			<div class="container" style="width: 300px; height: 300px">
				<header>
					<span class="centerText title">{{ deviceData.device.name }}</span>
					<span class="centerText subtitle">{{ deviceData.device.type }}</span>
				</header>
				<div class="mainView"></div>
				<footer class="footer">
					<!--<button class="dangerButton waves-light waves-button waves-float" onclick="">Remove</button>-->
					<button class="waves-light waves-button waves-float" onclick="enterSublink('{{ deviceData.id }}')">View</button>
				</footer>
			</div>
		{% endfor %}
		<div class="container placeholder" style="width: 300px; height: 300px;">
			<div class="plusCircleButton" id="addDevice">
				<span class="plusCircleText">+</span>
			</div>
		</div>
	</div>
{% endblock %}

{% block scripts %}
	<script type="text/javascript">
		let deviceForms = {{ deviceForms|json_encode|raw }};
		let installedDrivers = {{ installedDrivers|json_encode|raw }};
		
		let currentForm = deviceForms[installedDrivers[0]];
		const baseForm = {
			"name": {
				"type": "textbox",
				"isTitled": true
			},
			"device": {
				"type": "list",
				"isTitled": true,
				"items": installedDrivers,
				"listeners": [{
					"event": "click",
					"callback": (e) => {
						currentForm = deviceForms[e.target.value];
					}
				}]
			}
		};
		Waves.init();
		document.getElementById("addDevice").addEventListener("click", () => {
			let newDeviceWindow = displayWindow("Add New Device", 450, createForm(baseForm, "next", (baseDevice) => {
				closeWindow(newDeviceWindow);
				let configWindow = displayWindow("Add New " + baseDevice.device, 450, createForm(currentForm, "add device", (data) => {
					socket.emit("addDevice", {name: baseDevice.name, type: baseDevice.device, extraData: data}, (uuid) => {
						if(uuid) enterSublink(uuid);
						else{
							alert("An error occurred");
							closeWindow(configWindow);
						}
					});
				}));
			}));
		});
	</script>
{% endblock %}