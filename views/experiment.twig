{% extends 'layout.twig' %}

{% block screen %}
{% embed "templates/dataflowEditorContainer.twig" %}{% endembed %}
{% endblock %}

{% block body %}
	<h1 class="pageTitle">Experiment "{{ experiment.name }}"</h1>
	<button class="waves-button waves-float waves-ripple" onclick="displayDataflowEditor()">Edit Dataflow</button>
	<h2 class="pageSubtitle">Sensors</h2>
	{% if experiment.sensors|length <= 0 %}
		<div class="emptyTableDiv">
			<span>This experiment does not have any sensors</span>
		</div>
	{% else %}
		<table>
			<thead>
			<tr>
				<th col-size="medium">Name</th>
				<th col-size="medium">Device</th>
				<th col-size="uuid">ID</th>
			</tr>
			</thead>
			<tbody id="tableBody">
			{% for sensorData in experiment.sensors %}
				<tr>
					<td col-size="medium">{{ sensorData.name }}</td>
					<td col-size="medium">{{ sensorData.device }}</td>
					<td col-size="uuid" class="highlightText">{{ sensorData.id }}</td>
				</tr>
			{% endfor %}
			</tbody>
		</table>
	{% endif %}
	<button class="waves-button waves-float waves-ripple blueButton" style="margin-left: 0" onclick="openAddSensorDialog()">Add Sensor</button>
	<h2 class="pageSubtitle">Graphs</h2>
{% endblock %}

{% block scripts %}
	<script type="text/javascript" src="/javascripts/dataflowEditor.js"></script>
	<script type="text/javascript">
		let experiment = {{ experiment|json_encode|raw }};
		loadDataflowMenuNodes({{ registeredNodes|json_encode|raw }});
		let dtf = new Dataflow(experiment.dataflow);
		Waves.init();
		
		function displayDataflowEditor(){
			displayEditor(dtf, () => {
				socket.emit("updateExperimentDataflow", {id: "{{ experimentID }}", dataflowStructure: currentEditor.fileStructure}, (res) => {
					if(res) closeEditor();
					else alert("An error occurred while trying to save");
				});
			});
		}
		
		function openAddSensorDialog(){
			// TODO: Display all devices and their sensor in a list that pops up
			let ul = document.createElement("ul");
			for(const devData of {{ devices|json_encode|raw }}){
				if(Object.keys(devData.device.sensors).length <= 0) continue;
				let devLi = document.createElement("li");
				let devSpan = document.createElement("span");
				devSpan.appendChild(document.createTextNode(devData.device.name));
				devLi.appendChild(devSpan);
				let senLi = document.createElement("li");
				for(const sensor of Object.values(devData.device.sensors)){
					let senSpan = document.createElement("span");
					senSpan.appendChild(document.createTextNode(sensor.type));
					senLi.appendChild(senSpan);
				}
				devLi.appendChild(senLi);
				ul.appendChild(devLi);
			}
			displayWindow("Add Sensors To Experiment", 450, ul);
		}
	</script>
{% endblock %}
