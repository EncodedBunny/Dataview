{% extends 'layout.twig' %}

{% block body %}
	<h2>Device "{{ device.name }}"</h2>
	<div class="devicesGroupContainer" id="sensorsGroupContainer">
		{% for id in device.sensors|keys %}
			<div class="container" style="width: 300px; height: 300px">
				<header>
					<span class="centerText title">{{ device.sensors[id].type }}</span>
				</header>
				<div class="mainView">
					{% for prop in device.sensors[id].data|keys %}
						{% if prop|length > 0 and sensorLayout[prop].title is defined %}
							<span>{{ sensorLayout[prop].title }}: {{ device.sensors[id].data[prop] }}</span>
						{% endif %}
					{% endfor %}
				</div>
				<footer class="footer">
					<button class="dangerButton waves-light waves-button waves-float" onclick="removeSensor('{{ id }}')">Remove</button>
					<button class="waves-light waves-button waves-float" onclick="reconfigureSensor('{{ id }}')">Configure</button>
				</footer>
			</div>
		{% endfor %}
		<div class="container placeholder" style="width: 300px; height: 300px;">
			<div class="plusCircleButton" id="addSensor">
				<span class="plusCircleText">+</span>
			</div>
		</div>
	</div>
{% endblock %}

{% block scripts %}
	<script type="text/javascript" src="/javascripts/dataflowEditor.js"></script>
	<script type="text/javascript">
		let sensorLayout = {{ sensorLayout|json_encode|raw }};
		
		Waves.init();
		document.getElementById("addSensor").addEventListener("click", () => {
			let window = displayWindow("Add New Sensor", 450, createForm({
				"name": {
					"type": "textbox",
					"isTitled": true,
					"title": "Sensor Name"
				}
			}, "next", (data) => {
				closeWindow(window);
				displayWindow("Configure Sensor", 450, createForm(sensorLayout, "add sensor", (extraData) => {
					socket.emit("addSensor", {deviceID: "{{ deviceID }}", sensorName: data.name, extraData: extraData}, (res) => {
						if(!res) alert("An error has occurred");
						else reload();
					});
				}));
			}));
		});
		
		function reconfigureSensor(id){
			displayWindow("Configure Sensor", 450, createForm(sensorLayout, "done", (extraData) => {
				socket.emit("configureSensor", {deviceID: "{{ deviceID }}", sensorID: id, extraData: extraData}, (res) => {
					if(!res) alert("An error has occurred");
					else reload();
				});
			}));
		}
		
		function removeSensor(id){
			socket.emit("removeSensor", {sensorID: id}, (res) => {
				if(!res) alert("An error has occurred");
				else reload();
			});
		}
	</script>
{% endblock %}