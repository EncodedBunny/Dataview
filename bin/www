#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const debug = require('debug')('dataview:server');
const settings = require("../settings");

const port = normalizePort(process.env.PORT || settings.getSetting("port"));
let app = require('../app')(port);

app.set('port', port);

app.server.on('error', onError);
app.server.on('listening', onListening);

function normalizePort(val) {
	let port = parseInt(val, 10);

	if (isNaN(port)) return val;

	if (port >= 0) return port;

	return false;
}

function onError(error) {
	if (error.syscall !== 'listen') throw error;

	let bind = typeof port === 'string'
		? 'Pipe ' + port
		: 'Port ' + port;

	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(bind + ' is already in use');
			process.exit(1);
			break;
		default:
			throw error;
	}
}

function onListening() {
	let addr = app.server.address();
	let bind = typeof addr === 'string'
		? 'pipe ' + addr
		: 'port ' + addr.port;
	debug('Listening on ' + bind);
}
